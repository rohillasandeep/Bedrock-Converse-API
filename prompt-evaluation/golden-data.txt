{"prompt":"What is Amazon Bedrock?", "category":"AWS Services", "referenceResponse":"Amazon Bedrock is a fully managed service that offers a choice of industry leading foundation models (FMs) along with a broad set of capabilities that you need to build generative AI applications, simplifying development with security, privacy, and responsible AI. With the comprehensive capabilities of Amazon Bedrock, you can experiment with a variety of top FMs, customize them privately with your data using techniques such as fine-tuning and retrieval-augmented generation (RAG), and create managed agents that execute complex business tasks—from booking travel and processing insurance claims to creating ad campaigns and managing inventory—all without writing any code. Since Amazon Bedrock is serverless, you don't have to manage any infrastructure, and you can securely integrate and deploy generative AI capabilities into your applications using the AWS services you are already familiar with."}
{"prompt":"What is AWS Lambda?", "category":"AWS Services", "referenceResponse":"AWS Lambda lets you run code without provisioning or managing servers. You pay only for the compute time you consume - there is no charge when your code is not running. With Lambda, you can run code for virtually any type of application or backend service - all with zero administration. Just upload your code, and Lambda takes care of everything required to run and scale your code with high availability. You can set up your code to automatically trigger from other AWS services or call it directly from any web or mobile app. "}
{"prompt":"What is Amazon Elastic Compute Cloud (Amazon EC2)?", "category":"AWS Services", "referenceResponse":"Amazon EC2 is a web service that provides resizable compute capacity in the cloud. It is designed to make web-scale computing easier for developers."}
{"prompt":"What is Amazon S3?", "category":"AWS Services", "referenceResponse":"Amazon S3 is object storage built to store and retrieve any amount of data from anywhere. S3 is a simple storage service that offers industry leading durability, availability, performance, security, and virtually unlimited scalability at very low costs."}
{"prompt":"What is Amazon Q Business?", "category":"AWS Services", "referenceResponse":"Amazon Q Business is a fully managed service that deploys a generative AI business expert for your enterprise data. It comes with a built-in user interface, where users ask complex questions in natural language, create or compare documents, generate document summaries, and interact with their third-party applications."}
{"prompt":"Can anyone work at an Agile desk?", "category":"IT Workplace", "referenceResponse":" "}
{"prompt":"Do Agile workplaces or neighborhoods have assigned seats?", "category":"IT Workplace", "referenceResponse":"Agile workplaces have unassigned seating. Instead of a single assigned desk, you have access to a team neighborhood with different areas to work from. Each neighborhood is designed to fit the business unit with the space types they use most.Your Agile neighborhood is your team's home base at the office."}
{"prompt":"How will I find an Agile desk?", "category":"IT Workplace", "referenceResponse":"Follow the GREF signage to find Agile neighborhoods in your building. In US offices, each Agile desk also has a sticker that says “Agile desk” on the lower-right corner."}
{"prompt":"What types of monitors and accessories do Agile desks have?", "category":"IT Workplace", "referenceResponse":"Designed for individual tasks and focus work, Agile workstations have ergonomic seats and include one or two monitors, along with some accessories like a keyboard and mouse. Some have DisplayLink docking stations as well. You’ll find different monitor setups at different Agile desks. There are 3 basic setups: 1. Dual monitors 2. Dual monitors along with a DisplayLink docking station 3. Single 32-inch monitor Visit Connect to an Agile desk for an overview of hardware and IT setup instructions."}
{"prompt":"What are the different types of spaces in an Agile neighborhood?", "category":"IT Workplace", "referenceResponse":"There are 5 different “space types” in an Agile neighborhood: Work, Meet, Connect, Social, and Support. Visit the Agile Workplace Wiki for a description of each and its purpose."}
{"prompt":"Why do I still see Simple Print? Isn't it called Secure Print now?", "category":"IT Printing", "referenceResponse":"If your printing application was installed before February 2024, you might still encounter Simple Print as your printer in print dialog boxes and the following regional options:Simple-Print (America and Asia Pacific except China) Simple-Print-CN (China) Simple-Print-EU (Europe, the Middle East, and Africa) The service name was changed to Secure Print in February 2024. To update your printer names and region list, uninstall and reinstall Secure Print."}
{"prompt":"Is Follow-You Printing still available?", "category":"IT Printing", "referenceResponse":"No. Follow-You Printing has been decommissioned globally and has been replaced by Amazon Secure Print where applicable."}
{"prompt":"What if my building doesn’t use Secure Print?", "category":"IT Printing", "referenceResponse":"If your building uses a non–Secure Print service, refer to the questions below. Otherwise, refer to the Print remotely article for directions on setting up network or USB printers."}
{"prompt":"Can I use a loaner or temporary badge to collect documents from a printer?", "category":"IT Printing", "referenceResponse":"No. Loaner or temp badges can't be used with Secure Print."}
{"prompt":"What are the paperless printing options?", "category":"IT Printing", "referenceResponse":"Consider Quip or WorkDocs for paperless options whenever possible."}
{"prompt":"What is AEA? How do I use it?", "category":"IT AEA", "referenceResponse":"AEA uses your security key credentials to give you access to internal Amazon resources. Installing the AEA mobile app is required if you want to access internal services from your mobile device. AEA is installed as a browser extension on your computer or as a standalone app on your mobile device. When you access a secure site or service, you'll be prompted to sign in with your security key credentials."}
{"prompt":"How can I request that a service I need be made available using AEA?", "category":"IT AEA", "referenceResponse":"Open the AEA Console Status Tool. Enter the resource’s domain name into the tool. Click Get AEA Status. If the resource is available or there is already a tracking ticket to move it off-VPN, you can stop here. If there is no ticket and you use this resource often, click Request to Externalize > Confirm. Submit a request to make the resource available without VPN."}
{"prompt":"Can I install AEA on non-Amazon computer?", "category":"IT AEA", "referenceResponse":"No. You need an Amazon-managed computer."}
{"prompt":"How can I provide feedback about my AEA experience?", "category":"IT AEA", "referenceResponse":" "}
{"prompt":"How can I give feedback on AEA?", "category":"IT AEA", "referenceResponse":"Join the #aea-laptop-feedback Slack channel.In the AEA mobile app, click the gear icon > Feedback.Do you own a tool or resource that doesn’t work on AEA? Find out how to add your service to AEA."}
{"prompt":"What are the pros/cons and use cases of using EventBridge, Lambda with queues, and SNS for event-driven architectures? My customer wants to fully understand when to use EventBridge, Lambda, and SNS for event-driven architectures. I consider this question to be solved when I have a use case, a pro and con for each of these technologies.For instance, Amazon SNS is recommended for high throughput or low latency messages published by other applications or microservices. https://event-driven-architecture.workshop.aws/4-sns.html Thanks!", "category":"AWS guide", "referenceResponse":"EventBridge really shines for its rules, with the ability to filter based on data within the event. This allow customers to have a central event bus and routing between microservices. See this sample application I built: https://github.com/aws-samples/aws-serverless-ecommerce-platform For example, if you have an e-commerce application and you use the event bus to send when an order is created, you could create a "white glove treatment" service that will react on new orders with a value above 1000 USD. This allow more flexibility in changing the business rules by changing the events within EventBridge. However, EventBridge will be more limited than SNS when it comes to large-scale fanout (e.g. sending an event to 100 000s of users) or for low-latency use-cases. If you think about both of them together, you could have an event sent to EventBridge, with a rule sending it to an SNS topic that would then send it to end-users. In regard to using queues to Lambda, it's mostly about reliability, batching and preventing excessive pressures if the Lambda function contacts non-scalable resources (e.g. a DB). If you invoke a Lambda function asynchronously (e.g. direct EventBridge or SNS to Lambda), you have less control over the retry mechanisms (max 3 invocations), but you can still have a DLQ. With SQS, you'll have more control there. Then, if we're talking about a function that receives lots of messages, with SQS/Kinesis, Lambda uses Event Source Mapping, where an internal system will pull messages, batch them together, and send them to the Lambda execution environment."}
{"prompt":"AWS Glue Workflow vs AWS Step Functions for Orchestration. We are evaluating AWS Glue Workflow vs Step Functions for AWS Glue Python Shell Jobs Orchestration to read data from S3 and Copy to Amazon Redshift. Copied data will be further transformed and aggregated using Redshift Stored Procedures. Does anyone know of pros and cons of using AWS Glue Workflow vs Step Functions for building such pipeline? any issues /limits with these services?", "category":"AWS guide", "referenceResponse":"Unfortunately Redshift and SQL are not integrated with a nice developer experience in either case. The major question I would have for you is: What is the target? Will you just stick with Redshift and provide a DWH, or is this the beginning of a wider data platform that will support other data consumers, like ML processes or operational systems? Step Functions Above it sounds that all the data processing is happening in Redshift and you also do not use the Glue data catalog. In that case I suspect that StepFunctions would be the better choice. You can specify your tasks and retries and parallelisation in an easy fashion. Just be aware that you need the libraries for your programming language, say Python, and Redshift/Postgres added as a layer to your Lambda functions, as out of the box it may not be supported, e.g. this is the case for Python. And for an occasional Glue job, you can still use StepFunctions to trigger it and that part is integrated into StepFunctions, i.e. no need for a Lambda Function. Glue But maybe your needs change and you intend to use the data catalog. Or besides Redshift, at least for some cases also want to use Athena or EMR, Glue could be a good choice and the Glue Workflows are bit easier to setup than Step Functions. You can use Python Shell scripts (as opposed to Python Spark scripts that would do the data transformations). They are usually not doing any work, but coordination, such as calling other APIs. That is what you could then do to call your COPY and stored procedures on Redshift. In the past Glue's Python shell came naked without the usual libraries that you need. Not sure that changed yet. There wasn't even a fully fledged native library to use SQL against Redshift. Just some Python library that did not support either DML or DDL properly. So you need to install Postgres libraries yourself, which is not simple, but should be possible though. Check this out. Update: Please check the comment from leesiu@ below. Having a good SQL integration out of the box, would tilt my answer towards using Glue and Python shells instead of StepFunctions. Monitoring - The Glue Workflows provide a rather nice view on job executions, their steps and their states. And many things that are needed for dealing with data work out of the box. If you use Step Functions this is not the case, you are building your own. For example you use CloudWatch to trigger the execution of the workflows. However, if your processes need to be integrated in the wider AWS eco system anyway, i.e. you build an operational Insights platform not just a DWH, this may be what you need anyway."}
{"prompt":"What are SageMaker hosting benefits compared to self managed hosting? For customers already running a self managed platform for microservices (say ECS/EKS) - What are the benefits of using SageMaker Hosting (endpoints)?", "category":"AWS guide", "referenceResponse":"Benefits:    One API call to deploy an endpoint by a data scientist using Python.    built-in IAM based authentication and TLS encryption.    Fully managed Blue/Green deployment.    Easy integration to predict from SageMaker Spark library (SparkML) / SM AirFlow operator / SM Operators for Kubernetes.    Model Monitor on top of the endpoint (No additional cost)    Single ms latency for a round trip call    Automated host and docker Security patches    Dedicated EC2 instance to ensure low-latency processing (no noisy neighbours containers).    out of the box High availability,    Easy auto scaling configuration.    API, SDK and GUI for viewing/updating/creating/delete your endpoints.    Full lineage from endpoint to model to training job to data sets.    A/B testing and running multiple variant simultaneously.    Support for Multi-model endpoints (dynamic loading/offloading of millions of models using the same runtime).   Support for multi-containers on the same instance.    built-in CI/CD deployment from model-registry using SageMaker Projects.    Effort used to create the model/container in SageMaker can be reused for batch inference (Batch Transform), Async inference, and Serverless inference.    Load balancing - directing requests to least loaded server.    Inference components - Deploying multiple models and assigning a system resources to each (cpu, mem, GPU). Cons:    Service premium (though private pricing might be available).    No Spot support yet.    Kuberentes devops needs to know another environment (SM Hosting) besides K8S.    A 5-15min wait to create a new endpoint.    Web container's 60 sec timeout on SM endpoints HTTP request. 30 sec timeout for initializing the model (but you can use async inference instead)."}
{"prompt":"I see that many of the models (Save Claude and Titan) are available on Bedrock and Jumpstart. What is the difference between the two and what are situations that would lead a project to use one over another?", "category":"AWS guide", "referenceResponse":"There are many differences, but the biggest difference is as follows. (1) JumpStart - GPU Infra Needed for Model deploy Jump Start is being introduced through Sagemaker Studio, etc It applies the model deployment to the gpu instance and calls the end point of the serving model directly. In other words, you can create a model serving process through gpu instance.(2) Bedrock using SDK/API style Bedrock provides Model Inference in the AWS service area in a pool form. Here, the provisioned method and the on-demand method are distinguished, and importantly, they do not require infrastructure for model serving and are called in an API manner. (3) Custom model and Fine-tuning Bedrock provisioned throughput has an s3 area for the model and is capable of fine tunneling and continuous-pre-training (CPT) only. https://docs.aws.amazon.com/bedrock/latest/userguide/prov-throughput.html https://aws.amazon.com/ko/blogs/aws/customize-models-in-amazon-bedrock-with-your-own-data-using-fine-tuning-and-continued-pre-training/(4) Model Difference : Titan vs Claude As a model difference, Titan is a self-trained model by Amzon, and Claude, as you know, was created by Anthorpic. Please refer to the link below to see what foundation models are offered https://aws.amazon.com/what-is/foundation-models/(5) Case By Case UseCase There are also performance indicators from a customer's point of view, but Titan is utilized a lot for Amazon's internal embeddings. However, Titan's text generation and image generation models are not currently supported in some multilingual languages, including Korean prompts.Reference : [1] Amazon Bedrock: https://aws.amazon.com/bedrock/[2] https://aws.amazon.com/sagemaker/jumpstart/ [3] Jump Start Workshop : https://catalog.us-east-1.prod.workshops.aws/workshops/7c37b5bd-40a7-40d3-beee-fb40de7d451d/en-US [4] Bedrock Workshop : https://catalog.workshops.aws/building-gen-ai-apps/en-US https://catalog.workshops.aws/building-with-amazon-bedrock/en-US"}
{"prompt":"What factors should we consider when deciding Dynamo DB DAX Vs ElastiCache? Context:Partner currently using DynamoDB. Two types of look ups (one that is relatively fixed; the other type is quite dynamic – i.e. a write of a new record followed by subsequent lookups).Just looking for general guidance / considerations. Thanks!", "category":"AWS guide", "referenceResponse":"Currently, there is not general guidance/consideration externally and internally. So, following is just my points of view.    Languages    DAX only supports applications written in Java, using the DAX SDK for Java.    Elasticache does not have such limitation    Memory size and architecture    When your DAX cluster is running, it will replicate the data among all of the nodes in the cluster (assuming that you have provisioned more than one node). So, the memory size is limited to its memory size of one node (dax.r3.8xlarge = 216 GB).    ElastiCache for Redis is similar to DAX. ElastiCache for memcached and Redis Cluster support sharding so that they can have lots of memory. e.g. Redis Cluster allows customers to run Redis workloads with up to 3.5TiB of in-memory capacity.    Integration with DynamoDB    When reading, DAX can fully handle the request that If the item is in the cache, DAX returns it soon and if the item is not available, DAX performs read operation against DynamoDB and store it in the cache. See here.When writing, it supports write-through and the writes be reflected directly in the DynamoDB and DAX. Customers do not need to manage cache invalidation logic.    In ElastiCache, customers need to write application code by their own how they handle it.    Availability    Both services provide multi-AZ support and failover (In ElastiCache, only Elasticache for Redis supports it).    Region    See here.(https://aws.amazon.com/jp/about-aws/global-infrastructure/regional-product-services/)Hope it helps you."}
{"prompt":"How do you reverse a string?", "category":"Coding questions", "referenceResponse":" "}
{"prompt":"How do you determine if a string is a palindrome?", "category":"Coding questions", "referenceResponse":"There are several ways to reverse a string in programming. Here's an example in C: [1]\n\n#include <stdio.h>\n#include <string.h>\n\nvoid reverseString(char str[], int length) {\n    int start = 0;\n    int end = length - 1;\n    char temp;\n\n    while (start < end) {\n        temp = str[start];\n        str[start] = str[end];\n        str[end] = temp;\n        start++;\n        end--;\n    }\n}\n\nint main() {\n    char str[] = "Hello, World!";\n    int length = strlen(str);\n\n    printf("Original string: %s\n", str);\n\n    reverseString(str, length);\n\n    printf("Reversed string: %s\n", str);\n\n    return 0;\n}\n\nCopy\n\nInsert at cursor\nc\nHere's how the \nreverseString\n function works: [2]\n\nIt takes two arguments: the string \nstr\n and its length \nlength\n.\n\nIt initializes two pointers, \nstart\n and \nend\n, pointing to the first and last characters of the string, respectively.\n\nIt swaps the characters at the \nstart\n and \nend\n positions using a temporary variable \ntemp\n.\n\nIt increments \nstart\n and decrements \nend\n to move towards the middle of the string.\n\nIt continues swapping characters until \nstart\n and \nend\n cross each other.\n\nAfter calling \nreverseString\n, the original string is reversed in-place. [3]\n\nOutput:\n\nOriginal string: Hello, World!\nReversed string: !dlroW ,olleH\n\nCopy\n\nInsert at cursor\ntext\nThere are other ways to reverse a string, such as using recursion, a character array, or built-in string functions (if available in the programming language). The approach shown here is a simple and efficient way to reverse a string in C. [4]"}
{"prompt":"How do you calculate the number of numerical digits in a string?", "category":"Coding questions", "referenceResponse":"To calculate the number of numerical digits in a string, you can iterate through each character in the string and check if it is a digit using a condition or a character classification function provided by the programming language. Here's an example in Python: [1]\n\ndef count_digits(string):\n    digit_count = 0\n    for char in string:\n        if char.isdigit():\n            digit_count += 1\n    return digit_count\n\n# Example usage\ninput_string = "Hello123World456"\nnum_digits = count_digits(input_string)\nprint(f"The number of digits in '{input_string}' is: {num_digits}")\n\nCopy\n\nInsert at cursor\npython\nOutput:\n\nThe number of digits in 'Hello123World456' is: 6\n\nCopy\n\nInsert at cursor\ntext\nHere's how the \ncount_digits\n function works:\n\nInitialize a variable \ndigit_count\n to keep track of the number of digits encountered.\n\nIterate through each character \nchar\n in the input string \nstring\n.\n\nCheck if the character \nchar\n is a digit using the \nisdigit()\n method in Python.\n\nIf \nchar\n is a digit, increment the \ndigit_count\n variable.\n\nAfter iterating through all characters, return the final \ndigit_count\n.\n\nIn the example usage, the string \n"Hello123World456"\n is passed to the \ncount_digits\n function, which returns \n6\n as the number of digits in the string.\n\nYou can adapt this approach to other programming languages by using the appropriate character classification functions or conditions to check if a character is a digit.\n\nHere's an example in JavaScript:\n\nfunction countDigits(str) {\n  let digitCount = 0;\n  for (let char of str) {\n    if (/\d/.test(char)) {\n      digitCount++;\n    }\n  }\n  return digitCount;\n}\n\nconst inputString = "Hello123World456";\nconst numDigits = countDigits(inputString);\nconsole.log(`The number of digits in '${inputString}' is: ${numDigits}`);\n\nCopy\n\nInsert at cursor\njavascript\nIn this JavaScript implementation, the regular expression \n/\d/\n is used to check if a character is a digit. The \ntest()\n method returns \ntrue\n if the character matches the regular expression pattern, and \nfalse\n otherwise."}
{"prompt":"How do you find the count for the occurrence of a particular character in a string?", "category":"Coding questions", "referenceResponse":"To find the count for the occurrence of a particular character in a string, you can use the built-in \ncount()\n method in Python. The \ncount()\n method returns the number of non-overlapping occurrences of a substring (in this case, a single character) in the given string. [1]\n\nHere's an example:\n\ndef count_char(string, char):\n    return string.count(char)\n\n# Example usage\ninput_string = "Hello, World!"\nchar_to_count = "l"\ncount = count_char(input_string, char_to_count)\nprint(f"The character '{char_to_count}' appears {count} times in '{input_string}'")\n\nCopy\n\nInsert at cursor\npython\nOutput:\n\nThe character 'l' appears 3 times in 'Hello, World!'\n\nCopy\n\nInsert at cursor\ntext\nHere's how the \ncount_char\n function works:\n\nThe function takes two arguments: \nstring\n (the input string) and \nchar\n (the character to count).\n\nIt calls the \ncount()\n method on the input string \nstring\n with the character \nchar\n as the argument.\n\nThe \ncount()\n method returns the number of occurrences of \nchar\n in \nstring\n.\n\nThe function returns the count.\n\nIn the example usage, the string \n"Hello, World!"\n and the character \n"l"\n are passed to the \ncount_char\n function, which returns \n3\n as the count of occurrences of \n"l"\n in the string.\n\nNote that the \ncount()\n method is case-sensitive, so it will count occurrences of the exact character you provide, including its case. If you need to perform a case-insensitive count, you can convert the string to lowercase (or uppercase) before calling \ncount()\n.\n\nHere's an example of a case-insensitive count:\n\ndef count_char_case_insensitive(string, char):\n    lowercase_string = string.lower()\n    lowercase_char = char.lower()\n    return lowercase_string.count(lowercase_char)\n\n# Example usage\ninput_string = "Hello, World!"\nchar_to_count = "L"\ncount = count_char_case_insensitive(input_string, char_to_count)\nprint(f"The character '{char_to_count}' (case-insensitive) appears {count} times in '{input_string}'")\n\nCopy\n\nInsert at cursor\npython\nOutput:\n\nThe character 'L' (case-insensitive) appears 3 times in 'Hello, World!'\n\nCopy\n\nInsert at cursor\ntext\nIn this example, both the input string and the character to count are converted to lowercase before calling the \ncount()\n method, ensuring a case-insensitive count."}
{"prompt":"How do you find the non-matching characters in a string?", "category":"Coding questions", "referenceResponse":"To find the non-matching characters in a string, you can use a regular expression pattern that matches the characters you want to exclude, and then find the characters that don't match that pattern. [1]\n\nHere's an example in Python:\n\nimport re\n\ndef find_non_matching_chars(string, pattern):\n    non_matching_chars = re.sub(pattern, '', string)\n    return non_matching_chars\n\n# Example usage\ninput_string = "Hello123World456"\npattern = r'[a-zA-Z]'  # Match all alphabetic characters\nnon_matching = find_non_matching_chars(input_string, pattern)\nprint(f"The non-matching characters in '{input_string}' are: '{non_matching}'")\n\nCopy\n\nInsert at cursor\npython\nOutput:\n\nThe non-matching characters in 'Hello123World456' are: '123456'\n\nCopy\n\nInsert at cursor\ntext\nHere's how the \nfind_non_matching_chars\n function works:\n\nThe function takes two arguments: \nstring\n (the input string) and \npattern\n (the regular expression pattern to match characters you want to exclude).\n\nIt uses the \nre.sub()\n function from the \nre\n module (regular expressions) to replace all occurrences of the \npattern\n in \nstring\n with an empty string \n''\n.\n\nThe \nre.sub()\n function returns a new string with the matched characters removed, leaving only the non-matching characters.\n\nThe function returns the resulting string containing the non-matching characters.\n\nIn the example usage, the string \n"Hello123World456"\n and the regular expression pattern \nr'[a-zA-Z]'\n (which matches all alphabetic characters) are passed to the find_non_matching_chars \nfunction. The function returns\n"123456"`, which are the non-matching characters (i.e., the digits) in the input string.\n\nYou can modify the regular expression pattern to match different types of characters you want to exclude. For example, if you want to find all non-alphanumeric characters, you can use the pattern \nr'^a-zA-Z0-9'\n.\n\nHere's an example in JavaScript:\n\nfunction findNonMatchingChars(str, pattern) {\n  const regex = new RegExp(pattern, 'g');\n  return str.replace(regex, '');\n}\n\nconst inputString = "Hello123World456";\nconst pattern = /[a-zA-Z]/g; // Match all alphabetic characters\nconst nonMatching = findNonMatchingChars(inputString, pattern);\nconsole.log(`The non-matching characters in '${inputString}' are: '${nonMatching}'`);\n\nCopy\n\nInsert at cursor\njavascript\nIn this JavaScript implementation, the \nfindNonMatchingChars\n function takes the input string \nstr\n and the regular expression pattern \npattern\n. It creates a new \nRegExp\n object with the provided pattern and the \n'g'\n flag (global) to match all occurrences. Then, it uses the \nreplace()\n method to replace all matched characters with an empty string, effectively removing them from the original string. The resulting string contains only the non-matching characters."}
